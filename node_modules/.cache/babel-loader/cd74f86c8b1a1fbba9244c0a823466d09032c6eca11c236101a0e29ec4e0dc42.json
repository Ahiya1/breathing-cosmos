{"ast":null,"code":"var _jsxFileName = \"/home/ahiya/Ahiya/full_projects/breathing-cosmos/src/components/BreathingCosmos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport useBreathDetection from \"../hooks/useBreathDetection\";\nimport CosmicCanvas from \"./CosmicCanvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BreathingCosmos({\n  microphoneStream,\n  onStop\n}) {\n  _s();\n  const [sessionTime, setSessionTime] = useState(0);\n  const [entities, setEntities] = useState([]);\n  const [cosmicState, setCosmicState] = useState({\n    consciousness: 0,\n    complexity: 0,\n    unity: 0,\n    transcendence: 0\n  });\n  const sessionStartTime = useRef(Date.now());\n  const entityIdCounter = useRef(0);\n  const animationFrameRef = useRef();\n\n  // Breath detection hook\n  const breathData = useBreathDetection(microphoneStream);\n\n  // Update session time\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setSessionTime(Date.now() - sessionStartTime.current);\n    }, 100);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Update cosmic state based on breath\n  useEffect(() => {\n    if (!breathData) return;\n    const {\n      breathPhase,\n      breathDepth,\n      breathRhythm,\n      coherence,\n      amplitude,\n      frequency\n    } = breathData;\n    setCosmicState(prev => ({\n      consciousness: Math.min(1, prev.consciousness + coherence * 0.01),\n      complexity: Math.min(1, prev.complexity + breathDepth * 0.005),\n      unity: Math.min(1, prev.unity + (breathRhythm > 0.7 ? 0.01 : -0.005)),\n      transcendence: Math.min(1, prev.transcendence + (amplitude > 0.8 ? 0.008 : 0))\n    }));\n\n    // Entity birth on inhale peaks\n    if (breathPhase === \"inhale\" && breathDepth > 0.6 && Math.random() < breathDepth * 0.3) {\n      birthEntity(breathDepth, coherence, amplitude);\n    }\n\n    // Evolution pulses on exhale\n    if (breathPhase === \"exhale\" && breathDepth > 0.4) {\n      evolveEntities(breathDepth, coherence);\n    }\n\n    // Transcendence events during breath pauses\n    if (breathPhase === \"pause\" && amplitude > 0.7) {\n      transcendEntities();\n    }\n  }, [breathData]);\n  const birthEntity = (depth, coherence, amplitude) => {\n    const newEntity = {\n      id: entityIdCounter.current++,\n      x: Math.random() * window.innerWidth,\n      y: Math.random() * window.innerHeight,\n      consciousness: coherence * 0.5,\n      complexity: depth,\n      life: 1.0,\n      age: 0,\n      size: 2 + depth * 8,\n      hue: (coherence * 360 + amplitude * 120) % 360,\n      velocity: {\n        x: (Math.random() - 0.5) * 2,\n        y: (Math.random() - 0.5) * 2\n      },\n      connections: [],\n      transcended: false,\n      birthTime: sessionTime\n    };\n    setEntities(prev => [...prev, newEntity]);\n  };\n  const evolveEntities = (breathDepth, coherence) => {\n    setEntities(prev => prev.map(entity => {\n      if (entity.transcended) return entity;\n      return {\n        ...entity,\n        consciousness: Math.min(1, entity.consciousness + coherence * 0.02),\n        complexity: Math.min(2, entity.complexity + breathDepth * 0.01),\n        age: entity.age + 1,\n        life: Math.max(0, entity.life - 0.001 + coherence * 0.002)\n      };\n    }));\n  };\n  const transcendEntities = () => {\n    setEntities(prev => prev.map(entity => {\n      if (entity.consciousness > 0.8 && !entity.transcended && Math.random() < 0.1) {\n        return {\n          ...entity,\n          transcended: true,\n          size: entity.size * 1.5,\n          hue: (entity.hue + 60) % 360\n        };\n      }\n      return entity;\n    }));\n  };\n\n  // Continuous entity evolution\n  useEffect(() => {\n    const evolve = () => {\n      setEntities(prev => {\n        return prev.map(entity => ({\n          ...entity,\n          x: entity.x + entity.velocity.x,\n          y: entity.y + entity.velocity.y,\n          age: entity.age + 0.1,\n          life: entity.transcended ? entity.life : Math.max(0, entity.life - 0.0001)\n        })).filter(entity => entity.life > 0 || entity.transcended).map(entity => {\n          // Wrap around screen edges\n          if (entity.x < 0) entity.x = window.innerWidth;\n          if (entity.x > window.innerWidth) entity.x = 0;\n          if (entity.y < 0) entity.y = window.innerHeight;\n          if (entity.y > window.innerHeight) entity.y = 0;\n          return entity;\n        });\n      });\n      animationFrameRef.current = requestAnimationFrame(evolve);\n    };\n    animationFrameRef.current = requestAnimationFrame(evolve);\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, []);\n  const formatTime = ms => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    return `${minutes}:${(seconds % 60).toString().padStart(2, \"0\")}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"breathing-cosmos\",\n    children: [/*#__PURE__*/_jsxDEV(CosmicCanvas, {\n      entities: entities,\n      cosmicState: cosmicState,\n      breathData: breathData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-time\",\n          children: formatTime(sessionTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entity-count\",\n          children: [entities.length, \" beings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cosmic-meters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meter\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Consciousness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meter-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meter-fill consciousness\",\n              style: {\n                width: `${cosmicState.consciousness * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meter\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Complexity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meter-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meter-fill complexity\",\n              style: {\n                width: `${cosmicState.complexity * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meter\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Unity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meter-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meter-fill unity\",\n              style: {\n                width: `${cosmicState.unity * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"breath-indicator\",\n        children: breathData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `breath-phase ${breathData.breathPhase}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"breath-circle\",\n            style: {\n              transform: `scale(${0.5 + breathData.breathDepth * 0.5})`,\n              opacity: breathData.amplitude\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"phase-text\",\n            children: breathData.breathPhase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-session\",\n        onClick: onStop,\n        children: \"Return to Void\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(BreathingCosmos, \"VDT5wj5DYD3+BvaR3bq2mDJSueA=\", false, function () {\n  return [useBreathDetection];\n});\n_c = BreathingCosmos;\nexport default BreathingCosmos;\nvar _c;\n$RefreshReg$(_c, \"BreathingCosmos\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useBreathDetection","CosmicCanvas","jsxDEV","_jsxDEV","BreathingCosmos","microphoneStream","onStop","_s","sessionTime","setSessionTime","entities","setEntities","cosmicState","setCosmicState","consciousness","complexity","unity","transcendence","sessionStartTime","Date","now","entityIdCounter","animationFrameRef","breathData","timer","setInterval","current","clearInterval","breathPhase","breathDepth","breathRhythm","coherence","amplitude","frequency","prev","Math","min","random","birthEntity","evolveEntities","transcendEntities","depth","newEntity","id","x","window","innerWidth","y","innerHeight","life","age","size","hue","velocity","connections","transcended","birthTime","map","entity","max","evolve","filter","requestAnimationFrame","cancelAnimationFrame","formatTime","ms","seconds","floor","minutes","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","width","transform","opacity","onClick","_c","$RefreshReg$"],"sources":["/home/ahiya/Ahiya/full_projects/breathing-cosmos/src/components/BreathingCosmos.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport useBreathDetection from \"../hooks/useBreathDetection\";\nimport CosmicCanvas from \"./CosmicCanvas\";\n\nfunction BreathingCosmos({ microphoneStream, onStop }) {\n  const [sessionTime, setSessionTime] = useState(0);\n  const [entities, setEntities] = useState([]);\n  const [cosmicState, setCosmicState] = useState({\n    consciousness: 0,\n    complexity: 0,\n    unity: 0,\n    transcendence: 0,\n  });\n\n  const sessionStartTime = useRef(Date.now());\n  const entityIdCounter = useRef(0);\n  const animationFrameRef = useRef();\n\n  // Breath detection hook\n  const breathData = useBreathDetection(microphoneStream);\n\n  // Update session time\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setSessionTime(Date.now() - sessionStartTime.current);\n    }, 100);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  // Update cosmic state based on breath\n  useEffect(() => {\n    if (!breathData) return;\n\n    const {\n      breathPhase,\n      breathDepth,\n      breathRhythm,\n      coherence,\n      amplitude,\n      frequency,\n    } = breathData;\n\n    setCosmicState((prev) => ({\n      consciousness: Math.min(1, prev.consciousness + coherence * 0.01),\n      complexity: Math.min(1, prev.complexity + breathDepth * 0.005),\n      unity: Math.min(1, prev.unity + (breathRhythm > 0.7 ? 0.01 : -0.005)),\n      transcendence: Math.min(\n        1,\n        prev.transcendence + (amplitude > 0.8 ? 0.008 : 0)\n      ),\n    }));\n\n    // Entity birth on inhale peaks\n    if (\n      breathPhase === \"inhale\" &&\n      breathDepth > 0.6 &&\n      Math.random() < breathDepth * 0.3\n    ) {\n      birthEntity(breathDepth, coherence, amplitude);\n    }\n\n    // Evolution pulses on exhale\n    if (breathPhase === \"exhale\" && breathDepth > 0.4) {\n      evolveEntities(breathDepth, coherence);\n    }\n\n    // Transcendence events during breath pauses\n    if (breathPhase === \"pause\" && amplitude > 0.7) {\n      transcendEntities();\n    }\n  }, [breathData]);\n\n  const birthEntity = (depth, coherence, amplitude) => {\n    const newEntity = {\n      id: entityIdCounter.current++,\n      x: Math.random() * window.innerWidth,\n      y: Math.random() * window.innerHeight,\n      consciousness: coherence * 0.5,\n      complexity: depth,\n      life: 1.0,\n      age: 0,\n      size: 2 + depth * 8,\n      hue: (coherence * 360 + amplitude * 120) % 360,\n      velocity: {\n        x: (Math.random() - 0.5) * 2,\n        y: (Math.random() - 0.5) * 2,\n      },\n      connections: [],\n      transcended: false,\n      birthTime: sessionTime,\n    };\n\n    setEntities((prev) => [...prev, newEntity]);\n  };\n\n  const evolveEntities = (breathDepth, coherence) => {\n    setEntities((prev) =>\n      prev.map((entity) => {\n        if (entity.transcended) return entity;\n\n        return {\n          ...entity,\n          consciousness: Math.min(1, entity.consciousness + coherence * 0.02),\n          complexity: Math.min(2, entity.complexity + breathDepth * 0.01),\n          age: entity.age + 1,\n          life: Math.max(0, entity.life - 0.001 + coherence * 0.002),\n        };\n      })\n    );\n  };\n\n  const transcendEntities = () => {\n    setEntities((prev) =>\n      prev.map((entity) => {\n        if (\n          entity.consciousness > 0.8 &&\n          !entity.transcended &&\n          Math.random() < 0.1\n        ) {\n          return {\n            ...entity,\n            transcended: true,\n            size: entity.size * 1.5,\n            hue: (entity.hue + 60) % 360,\n          };\n        }\n        return entity;\n      })\n    );\n  };\n\n  // Continuous entity evolution\n  useEffect(() => {\n    const evolve = () => {\n      setEntities((prev) => {\n        return prev\n          .map((entity) => ({\n            ...entity,\n            x: entity.x + entity.velocity.x,\n            y: entity.y + entity.velocity.y,\n            age: entity.age + 0.1,\n            life: entity.transcended\n              ? entity.life\n              : Math.max(0, entity.life - 0.0001),\n          }))\n          .filter((entity) => entity.life > 0 || entity.transcended)\n          .map((entity) => {\n            // Wrap around screen edges\n            if (entity.x < 0) entity.x = window.innerWidth;\n            if (entity.x > window.innerWidth) entity.x = 0;\n            if (entity.y < 0) entity.y = window.innerHeight;\n            if (entity.y > window.innerHeight) entity.y = 0;\n            return entity;\n          });\n      });\n\n      animationFrameRef.current = requestAnimationFrame(evolve);\n    };\n\n    animationFrameRef.current = requestAnimationFrame(evolve);\n\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, []);\n\n  const formatTime = (ms) => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    return `${minutes}:${(seconds % 60).toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className=\"breathing-cosmos\">\n      {/* Cosmic Canvas */}\n      <CosmicCanvas\n        entities={entities}\n        cosmicState={cosmicState}\n        breathData={breathData}\n      />\n\n      {/* Session UI */}\n      <div className=\"session-ui\">\n        <div className=\"session-info\">\n          <div className=\"session-time\">{formatTime(sessionTime)}</div>\n          <div className=\"entity-count\">{entities.length} beings</div>\n        </div>\n\n        <div className=\"cosmic-meters\">\n          <div className=\"meter\">\n            <span>Consciousness</span>\n            <div className=\"meter-bar\">\n              <div\n                className=\"meter-fill consciousness\"\n                style={{ width: `${cosmicState.consciousness * 100}%` }}\n              />\n            </div>\n          </div>\n\n          <div className=\"meter\">\n            <span>Complexity</span>\n            <div className=\"meter-bar\">\n              <div\n                className=\"meter-fill complexity\"\n                style={{ width: `${cosmicState.complexity * 100}%` }}\n              />\n            </div>\n          </div>\n\n          <div className=\"meter\">\n            <span>Unity</span>\n            <div className=\"meter-bar\">\n              <div\n                className=\"meter-fill unity\"\n                style={{ width: `${cosmicState.unity * 100}%` }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"breath-indicator\">\n          {breathData && (\n            <div className={`breath-phase ${breathData.breathPhase}`}>\n              <div\n                className=\"breath-circle\"\n                style={{\n                  transform: `scale(${0.5 + breathData.breathDepth * 0.5})`,\n                  opacity: breathData.amplitude,\n                }}\n              />\n              <span className=\"phase-text\">{breathData.breathPhase}</span>\n            </div>\n          )}\n        </div>\n\n        <button className=\"end-session\" onClick={onStop}>\n          Return to Void\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default BreathingCosmos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}